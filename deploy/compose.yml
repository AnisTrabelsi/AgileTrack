
############################
#  Réseaux & volumes       #
############################
networks:
  devopstrack:

volumes:
  auth-db-data:
  projects-data:
  metrics-data:

############################
#        Services          #
############################
services:
  # ---------- PostgreSQL ----------
  auth-db:
    image: postgres:15
    container_name: auth-db
    environment:
      POSTGRES_DB: auth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
    networks:
      - devopstrack

  # ---------- Django Auth ----------
  auth-service:
    build:
      context: ../auth-service
    container_name: auth-service
    environment:
      DJANGO_SECRET_KEY: super-secret-dev-key
      POSTGRES_DB: auth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: auth-db
    depends_on:
      auth-db:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - devopstrack

  # ------------ MongoDB ------------
  projects-db:
    image: mongo:6
    container_name: projects-db
    volumes:
      - projects-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      retries: 5
    networks:
      - devopstrack

  # ------ FastAPI Projects API -----
  projects-service:
    build:
      context: ../projects-service
    container_name: projects-service
    environment:
      MONGO_URL: mongodb://projects-db:27017
      JWT_SECRET: super-secret-dev-key
    depends_on:
      projects-db:
        condition: service_healthy
    ports:
      - "8001:8001"
    networks:
      - devopstrack

  # --------------- Redis -----------
  tasks-redis:
    image: redis:7-alpine
    container_name: tasks-redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5
    networks:
      - devopstrack

  # --------- Tasks REST API --------
  tasks-service:
    build:
      context: ../tasks-service
    container_name: tasks-service
    command: ["node", "src/server.js"]
    environment:
      JWT_SECRET: super-secret-dev-key
      REDIS_URL: redis://tasks-redis:6379
    depends_on:
      tasks-redis:
        condition: service_healthy
    ports:
      - "8002:8002"
    networks:
      - devopstrack

  # -------- Tasks Background --------
  tasks-worker:
    build:
      context: ../tasks-service
    container_name: tasks-worker
    command: ["node", "src/worker.js"]
    environment:
      REDIS_URL: redis://tasks-redis:6379
    depends_on:
      tasks-redis:
        condition: service_healthy
    networks:
      - devopstrack

  # ------------- InfluxDB ----------
  metrics-db:
    image: influxdb:2.7
    container_name: metrics-db
    volumes:
      - metrics-data:/var/lib/influxdb2
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: admin123
      DOCKER_INFLUXDB_INIT_ORG: devopstrack
      DOCKER_INFLUXDB_INIT_BUCKET: metrics
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: dev-token
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 10s
      retries: 5
    networks:
      - devopstrack

  # ------- Metrics service (Go) ----
  metrics-service:
    build:
      context: ../metrics-service
    container_name: metrics-service
    environment:
      INFLUX_URL: http://metrics-db:8086
      INFLUX_ORG: devopstrack
      INFLUX_BUCKET: metrics
      INFLUX_TOKEN: dev-token
    depends_on:
      metrics-db:
        condition: service_healthy
    ports:
      - "9100:9100"      # /metrics (Prometheus)
    networks:
      - devopstrack

  # ------------ Prometheus ---------
  prometheus:
    image: prom/prometheus:v2.52.0
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      metrics-service:
        condition: service_started
    ports:
      - "9090:9090"
    networks:
      - devopstrack
