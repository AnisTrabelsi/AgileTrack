# version: "3.9"  # ← facultatif avec Docker Compose V2

services:
  # -------------------- PostgreSQL --------------------
  auth-db:
    image: postgres:15
    container_name: auth-db
    environment:
      POSTGRES_DB: auth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
    networks: [devopstrack]

  # -------------------- Django Auth --------------------
  auth-service:
    build:
      context: ../auth-service
    container_name: auth-service
    environment:
      DJANGO_SECRET_KEY: super-secret-dev-key
      POSTGRES_DB: auth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: auth-db
    depends_on:
      auth-db:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks: [devopstrack]

  # -------------------- MongoDB ------------------------
  projects-db:
    image: mongo:6
    container_name: projects-db
    volumes:
      - projects-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      retries: 5
    networks: [devopstrack]

  # ------------------ FastAPI Projects -----------------
  projects-service:
    build:
      context: ../projects-service
    container_name: projects-service
    environment:
      MONGO_URL: mongodb://projects-db:27017
      JWT_SECRET: super-secret-dev-key
    depends_on:
      projects-db:
        condition: service_healthy
    ports:
      - "8001:8001"
    networks: [devopstrack]

  # ---------------------- Redis ------------------------
  tasks-redis:
    image: redis:7-alpine
    container_name: tasks-redis
    networks: [devopstrack]

  # ------------------ NodeJS Tasks ---------------------
  tasks-service:
    build:
      context: ../tasks-service
    container_name: tasks-service
    environment:
      - JWT_SECRET=super-secret-dev-key
    depends_on:
      - tasks-redis
    ports:
      - "8002:8002"
    networks: [devopstrack]

# ---------------- Réseaux & Volumes ---------------------
networks:
  devopstrack:

volumes:
  auth-db-data:
  projects-data:
