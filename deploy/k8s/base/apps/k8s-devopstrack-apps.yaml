# =====================================================================
# DevOpsTrack — Apps (Deployments + Services + Secrets)
# Namespace requis : devopstrack
# Pré‑requis installés via Helm (bitnami/*) :
#   - Postgres  : Service  -> auth-db-postgresql
#   - MongoDB   : Service  -> projects-db-mongodb
#   - Redis     : Service  -> tasks-redis-master
#   - InfluxDB2 : Service  -> metrics-db-influxdb2
# Image pull    : Secret "image-pull-ghcr" (GHCR PAT read:packages)
# =====================================================================

apiVersion: v1
kind: Secret
metadata:
  name: devopstrack-app-secrets
  namespace: devopstrack
type: Opaque
stringData:
  # ⚠️ A remplacer en prod
  DJANGO_SECRET_KEY: super-secret-dev-key
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  JWT_SECRET: super-secret-dev-key
  INFLUXDB_TOKEN: dev-token

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: devopstrack
  labels:
    app.kubernetes.io/name: auth-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: auth-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: auth-service
    spec:
      imagePullSecrets:
        - name: image-pull-ghcr
      containers:
        - name: auth
          image: ghcr.io/anistrabelsi/auth-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: devopstrack-app-secrets
                  key: DJANGO_SECRET_KEY
            - name: POSTGRES_DB
              value: "auth"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: devopstrack-app-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: devopstrack-app-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_HOST
              value: auth-db-postgresql
          readinessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: devopstrack
spec:
  selector:
    app.kubernetes.io/name: auth-service
  ports:
    - name: http
      port: 8000
      targetPort: 8000
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: projects-service
  namespace: devopstrack
  labels:
    app.kubernetes.io/name: projects-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: projects-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: projects-service
    spec:
      imagePullSecrets:
        - name: image-pull-ghcr
      containers:
        - name: projects
          image: ghcr.io/anistrabelsi/projects-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8001
          env:
            - name: MONGO_URL
              value: mongodb://projects-db-mongodb:27017
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: devopstrack-app-secrets
                  key: JWT_SECRET
          readinessProbe:
            tcpSocket:
              port: 8001
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: 8001
            initialDelaySeconds: 30
            periodSeconds: 10
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: projects-service
  namespace: devopstrack
spec:
  selector:
    app.kubernetes.io/name: projects-service
  ports:
    - name: http
      port: 8001
      targetPort: 8001
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tasks-service
  namespace: devopstrack
  labels:
    app.kubernetes.io/name: tasks-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: tasks-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tasks-service
    spec:
      imagePullSecrets:
        - name: image-pull-ghcr
      containers:
        - name: tasks-api
          image: ghcr.io/anistrabelsi/tasks-service:latest
          imagePullPolicy: IfNotPresent
          command: ["node", "src/server.js"]
          ports:
            - containerPort: 8002
          env:
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: devopstrack-app-secrets
                  key: JWT_SECRET
            - name: REDIS_URL
              value: redis://tasks-redis-master:6379
          readinessProbe:
            tcpSocket:
              port: 8002
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: 8002
            initialDelaySeconds: 30
            periodSeconds: 10
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: tasks-service
  namespace: devopstrack
spec:
  selector:
    app.kubernetes.io/name: tasks-service
  ports:
    - name: http
      port: 8002
      targetPort: 8002
  type: ClusterIP

---
# Worker : pas de Service (processus en arrière‑plan)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tasks-worker
  namespace: devopstrack
  labels:
    app.kubernetes.io/name: tasks-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tasks-worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tasks-worker
    spec:
      imagePullSecrets:
        - name: image-pull-ghcr
      containers:
        - name: worker
          image: ghcr.io/anistrabelsi/tasks-service:latest
          imagePullPolicy: IfNotPresent
          command: ["node", "src/worker.js"]
          env:
            - name: REDIS_URL
              value: redis://tasks-redis-master:6379
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "300m"
              memory: "256Mi"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-service
  namespace: devopstrack
  labels:
    app.kubernetes.io/name: metrics-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: metrics-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: metrics-service
    spec:
      imagePullSecrets:
        - name: image-pull-ghcr
      containers:
        - name: metrics
          image: ghcr.io/anistrabelsi/metrics-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9100
          env:
            - name: INFLUXDB_URL
              value: http://metrics-db-influxdb2:8086
            - name: INFLUXDB_ORG
              value: devopstrack
            - name: INFLUXDB_BUCKET
              value: metrics
            - name: INFLUXDB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: devopstrack-app-secrets
                  key: INFLUXDB_TOKEN
          readinessProbe:
            tcpSocket:
              port: 9100
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: 9100
            initialDelaySeconds: 20
            periodSeconds: 10
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "300m"
              memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: metrics-service
  namespace: devopstrack
spec:
  selector:
    app.kubernetes.io/name: metrics-service
  ports:
    - name: http
      port: 9100
      targetPort: 9100
  type: ClusterIP

---
# Auto‑scaling sur l’API Auth (cible CPU 70%)
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: auth-hpa
  namespace: devopstrack
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: auth-service
  minReplicas: 2
  maxReplicas: 6
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
